###########################################################################
# This is a sample Azure DevOps pipeline that can be used for generating 
# a documentation website using DocFX. In this pipeline we use the 
# DocFxTocGenerator tool to generate the table of contents.
###########################################################################
trigger:
- none

variables:
- name: AzureConnectionName
  value: '<Azure connection name from ADO>'

pool:
  vmImage: windows-latest

steps:
# install docfx
- powershell: choco install docfx -y
  displayName: Install docfx

# install the companion tools
- powershell: choco install docfx-companion-tools -y
  displayName: Install docfx companion tools

# run the toc generator on /DocExamample folder
- powershell: DocFxTocGenerator -d .\DocExamples -si
  displayName: 'Generating TOC for .\DocExamples'

# run docfx to generate documentation website
- powershell: |
      &docfx DocEample\docfx.json
      if ($lastexitcode -ne 0)
      {
        throw [System.Exception] "docfx build failed with exit code $lastexitcode."
      }
  condition: succeeded()
  displayName: Run docfx

  # Create an archive
- task: ArchiveFiles@2
  displayName: 'Packing Documentation Web Site'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/_site'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/site.zip'
    replaceExistingArchive: true

# deployment to Azure
- task: AzureRmWebAppDeployment@4
  displayName: 'Publish website to Azure App Service'
  inputs:
    azureSubscription: $(AzureConnectionName)
    WebAppName: docs-website
    packageForLinux: '$(Build.ArtifactStagingDirectory)/site.zip'
